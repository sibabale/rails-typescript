/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Health status
 */
export type GetHealthResponse = {
  status?: string | undefined;
  timestamp?: Date | undefined;
};

/** @internal */
export const GetHealthResponse$inboundSchema: z.ZodType<
  GetHealthResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: z.string().optional(),
  timestamp: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
});

/** @internal */
export type GetHealthResponse$Outbound = {
  status?: string | undefined;
  timestamp?: string | undefined;
};

/** @internal */
export const GetHealthResponse$outboundSchema: z.ZodType<
  GetHealthResponse$Outbound,
  z.ZodTypeDef,
  GetHealthResponse
> = z.object({
  status: z.string().optional(),
  timestamp: z.date().transform(v => v.toISOString()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetHealthResponse$ {
  /** @deprecated use `GetHealthResponse$inboundSchema` instead. */
  export const inboundSchema = GetHealthResponse$inboundSchema;
  /** @deprecated use `GetHealthResponse$outboundSchema` instead. */
  export const outboundSchema = GetHealthResponse$outboundSchema;
  /** @deprecated use `GetHealthResponse$Outbound` instead. */
  export type Outbound = GetHealthResponse$Outbound;
}

export function getHealthResponseToJSON(
  getHealthResponse: GetHealthResponse,
): string {
  return JSON.stringify(
    GetHealthResponse$outboundSchema.parse(getHealthResponse),
  );
}

export function getHealthResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetHealthResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetHealthResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetHealthResponse' from JSON`,
  );
}
