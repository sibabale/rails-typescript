/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostSimulatorStartRequest = {
  count?: number | undefined;
  interval?: number | undefined;
};

/**
 * Simulation started
 */
export type PostSimulatorStartResponse = {
  message?: string | undefined;
};

/** @internal */
export const PostSimulatorStartRequest$inboundSchema: z.ZodType<
  PostSimulatorStartRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int().default(10),
  interval: z.number().int().default(1000),
});

/** @internal */
export type PostSimulatorStartRequest$Outbound = {
  count: number;
  interval: number;
};

/** @internal */
export const PostSimulatorStartRequest$outboundSchema: z.ZodType<
  PostSimulatorStartRequest$Outbound,
  z.ZodTypeDef,
  PostSimulatorStartRequest
> = z.object({
  count: z.number().int().default(10),
  interval: z.number().int().default(1000),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostSimulatorStartRequest$ {
  /** @deprecated use `PostSimulatorStartRequest$inboundSchema` instead. */
  export const inboundSchema = PostSimulatorStartRequest$inboundSchema;
  /** @deprecated use `PostSimulatorStartRequest$outboundSchema` instead. */
  export const outboundSchema = PostSimulatorStartRequest$outboundSchema;
  /** @deprecated use `PostSimulatorStartRequest$Outbound` instead. */
  export type Outbound = PostSimulatorStartRequest$Outbound;
}

export function postSimulatorStartRequestToJSON(
  postSimulatorStartRequest: PostSimulatorStartRequest,
): string {
  return JSON.stringify(
    PostSimulatorStartRequest$outboundSchema.parse(postSimulatorStartRequest),
  );
}

export function postSimulatorStartRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostSimulatorStartRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostSimulatorStartRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostSimulatorStartRequest' from JSON`,
  );
}

/** @internal */
export const PostSimulatorStartResponse$inboundSchema: z.ZodType<
  PostSimulatorStartResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string().optional(),
});

/** @internal */
export type PostSimulatorStartResponse$Outbound = {
  message?: string | undefined;
};

/** @internal */
export const PostSimulatorStartResponse$outboundSchema: z.ZodType<
  PostSimulatorStartResponse$Outbound,
  z.ZodTypeDef,
  PostSimulatorStartResponse
> = z.object({
  message: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostSimulatorStartResponse$ {
  /** @deprecated use `PostSimulatorStartResponse$inboundSchema` instead. */
  export const inboundSchema = PostSimulatorStartResponse$inboundSchema;
  /** @deprecated use `PostSimulatorStartResponse$outboundSchema` instead. */
  export const outboundSchema = PostSimulatorStartResponse$outboundSchema;
  /** @deprecated use `PostSimulatorStartResponse$Outbound` instead. */
  export type Outbound = PostSimulatorStartResponse$Outbound;
}

export function postSimulatorStartResponseToJSON(
  postSimulatorStartResponse: PostSimulatorStartResponse,
): string {
  return JSON.stringify(
    PostSimulatorStartResponse$outboundSchema.parse(postSimulatorStartResponse),
  );
}

export function postSimulatorStartResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostSimulatorStartResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostSimulatorStartResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostSimulatorStartResponse' from JSON`,
  );
}
